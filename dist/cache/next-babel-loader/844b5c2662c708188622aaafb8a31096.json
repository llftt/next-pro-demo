{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { diffString } from 'json-diff';\nvar EMPTY = '\"\"';\n\nvar handleJsonDiff = function handleJsonDiff(oldJson, newJson) {\n  var mergedOldJson = oldJson || EMPTY;\n  var mergedNewJson = newJson || EMPTY;\n\n  try {\n    mergedOldJson = JSON.parse(mergedOldJson);\n    mergedNewJson = JSON.parse(mergedNewJson);\n  } catch (err) {\n    throw new Error('invalid json');\n  }\n\n  return diffString(mergedOldJson, mergedNewJson);\n};\n\nvar JsonDiff = function JsonDiff(_ref) {\n  var oldJson = _ref.oldJson,\n      newJson = _ref.newJson,\n      raw = _ref.raw;\n  var diff;\n\n  try {\n    if (raw) {\n      diff = handleJsonDiff(oldJson, newJson);\n    } else {\n      diff = diffString(oldJson, newJson);\n    }\n  } catch (err) {\n    return __jsx(\"div\", null, \"JSON ERROR\");\n  }\n\n  return __jsx(\"div\", {\n    style: {\n      overflow: 'auto',\n      width: 400\n    }\n  }, __jsx(\"pre\", null, diff.split('\\n').map(function (e, i) {\n    var row = null;\n\n    if (e.indexOf('[31m-') > -1 && e.indexOf('[39m') > -1) {\n      row = __jsx(\"p\", {\n        key: i,\n        className: \"delete\"\n      }, e);\n    } else if (e.indexOf('[32m+') > -1 && e.indexOf(\"[39m\") > -1) {\n      row = __jsx(\"p\", {\n        key: i,\n        className: \"add\"\n      }, e);\n    } else {\n      row = __jsx(\"p\", {\n        key: i\n      }, e);\n    }\n\n    return row;\n  })));\n};\n\nexport default JsonDiff;","map":{"version":3,"sources":["/Users/lixiangfei/code/node-next-test/components/test/Diff.tsx"],"names":["React","diffString","EMPTY","handleJsonDiff","oldJson","newJson","mergedOldJson","mergedNewJson","JSON","parse","err","Error","JsonDiff","raw","diff","overflow","width","split","map","e","i","row","indexOf"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,UAAR,QAAyB,WAAzB;AAGA,IAAMC,KAAK,GAAG,IAAd;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,OAAD,EAAcC,OAAd,EAA8B;AACjD,MAAIC,aAAa,GAAGF,OAAO,IAAIF,KAA/B;AACA,MAAIK,aAAa,GAAGF,OAAO,IAAIH,KAA/B;;AACA,MAAG;AACCI,IAAAA,aAAa,GAAGE,IAAI,CAACC,KAAL,CAAWH,aAAX,CAAhB;AACAC,IAAAA,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAWF,aAAX,CAAhB;AACH,GAHD,CAGC,OAAMG,GAAN,EAAU;AACP,UAAM,IAAIC,KAAJ,CAAU,cAAV,CAAN;AACH;;AACD,SAAOV,UAAU,CAACK,aAAD,EAAgBC,aAAhB,CAAjB;AACH,CAVD;;AAiBA,IAAMK,QAAkC,GAAG,SAArCA,QAAqC,OAA2B;AAAA,MAAzBR,OAAyB,QAAzBA,OAAyB;AAAA,MAAhBC,OAAgB,QAAhBA,OAAgB;AAAA,MAAPQ,GAAO,QAAPA,GAAO;AAClE,MAAIC,IAAJ;;AACA,MAAG;AACC,QAAGD,GAAH,EAAO;AACHC,MAAAA,IAAI,GAAGX,cAAc,CAACC,OAAD,EAAUC,OAAV,CAArB;AACH,KAFD,MAEK;AACDS,MAAAA,IAAI,GAAGb,UAAU,CAACG,OAAD,EAAUC,OAAV,CAAjB;AACH;AACJ,GAND,CAMC,OAAMK,GAAN,EAAU;AACP,WAAO,gCAAP;AACH;;AACD,SACI;AAAK,IAAA,KAAK,EAAE;AAACK,MAAAA,QAAQ,EAAC,MAAV;AAAkBC,MAAAA,KAAK,EAAC;AAAxB;AAAZ,KACI,mBAEQF,IAAI,CAACG,KAAL,CAAW,IAAX,EAAiBC,GAAjB,CAAqB,UAACC,CAAD,EAAIC,CAAJ,EAAQ;AACzB,QAAIC,GAAG,GAAG,IAAV;;AACA,QAAGF,CAAC,CAACG,OAAF,CAAU,OAAV,IAAqB,CAAC,CAAtB,IAA2BH,CAAC,CAACG,OAAF,CAAU,MAAV,IAAoB,CAAC,CAAnD,EAAqD;AACjDD,MAAAA,GAAG,GAAG;AAAG,QAAA,GAAG,EAAED,CAAR;AAAW,QAAA,SAAS,EAAC;AAArB,SAA+BD,CAA/B,CAAN;AACH,KAFD,MAEM,IAAGA,CAAC,CAACG,OAAF,CAAU,OAAV,IAAqB,CAAC,CAAtB,IAA2BH,CAAC,CAACG,OAAF,CAAU,MAAV,IAAoB,CAAC,CAAnD,EAAqD;AACvDD,MAAAA,GAAG,GAAG;AAAG,QAAA,GAAG,EAAED,CAAR;AAAW,QAAA,SAAS,EAAC;AAArB,SAA4BD,CAA5B,CAAN;AACH,KAFK,MAED;AACDE,MAAAA,GAAG,GAAG;AAAG,QAAA,GAAG,EAAED;AAAR,SAAYD,CAAZ,CAAN;AACH;;AACD,WAAOE,GAAP;AACH,GAVD,CAFR,CADJ,CADJ;AAmBH,CA9BD;;AAgCA,eAAeT,QAAf","sourcesContent":["import React from 'react'\n\nimport {diffString} from 'json-diff'\n\n\nconst EMPTY = '\"\"';\n\nconst handleJsonDiff = (oldJson:any, newJson:any) => {\n    let mergedOldJson = oldJson || EMPTY;\n    let mergedNewJson = newJson || EMPTY;\n    try{\n        mergedOldJson = JSON.parse(mergedOldJson)\n        mergedNewJson = JSON.parse(mergedNewJson)\n    }catch(err){\n        throw new Error('invalid json')\n    }\n    return diffString(mergedOldJson, mergedNewJson)\n}\n\ninterface IJsonDiffProps{\n    oldJson:any,\n    newJson:any,\n    raw?:boolean,\n}\nconst JsonDiff:React.SFC<IJsonDiffProps> = ({oldJson, newJson, raw})=>{\n    let diff:string;\n    try{\n        if(raw){\n            diff = handleJsonDiff(oldJson, newJson)\n        }else{\n            diff = diffString(oldJson, newJson)\n        }\n    }catch(err){\n        return <div>JSON ERROR</div>\n    }\n    return (\n        <div style={{overflow:'auto', width:400}}>\n            <pre>\n                {\n                    diff.split('\\n').map((e, i)=>{\n                        let row = null\n                        if(e.indexOf('[31m-') > -1 && e.indexOf('[39m') > -1){\n                            row = <p key={i} className=\"delete\">{e}</p>\n                        }else if(e.indexOf('[32m+') > -1 && e.indexOf(\"[39m\") > -1){\n                            row = <p key={i} className=\"add\">{e}</p>\n                        }else{\n                            row = <p key={i}>{e}</p>\n                        }\n                        return row\n                    })\n                }\n            </pre>\n        </div>\n    )\n}\n\nexport default JsonDiff"]},"metadata":{},"sourceType":"module"}